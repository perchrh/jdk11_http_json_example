plugins {
    id 'java'
    id 'war'
    id 'org.gretty' version '2.3.1'
}

gretty {
    servletContainer = 'jetty9.4'
    httpEnabled = true
    jetty94Version = jettyVersion
}


group 'digitalsprouts.org'
version '1.0'

sourceCompatibility = 11

repositories {
    jcenter()
}


dependencies {
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: jerseyVersion
    implementation group: 'org.glassfish.jersey.core', name: 'jersey-server', version: jerseyVersion
    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: jerseyVersion
    implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: jerseyVersion

    testImplementation group: 'org.eclipse.jetty', name: 'jetty-server', version: jettyVersion
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version: jettyVersion
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-webapp', version: jettyVersion
    
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion

    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


ext.moduleName = 'org.digitalsprouts.example.backend'
compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
jar {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}
